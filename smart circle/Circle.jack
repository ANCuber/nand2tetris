class Circle {
    field int x, y, size; // center of mass
    field int ax, ay; // acceleration
    field int vx, vy; // velocity
    field int angle;
    field Data data;
    constructor Circle new(int sx, int sy, int ssize, int sax, int say, int svx, int svy, int sangle) {
        let x = sx;
        let y = sy;
        let size = ssize;
        let ax = sax;
        let ay = say;
        let vx = svx;
        let vy = svy;
        let angle = sangle;
        let data = Data.new();
        return this;
    }
    method int getx() { return x; }
    method int gety() { return y; }
    method int getAngle() { return angle; }
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawCircle(x, y, size);
        return;
    }
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawCircle(x, y, size);
        return;
    }
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
    method void moveUp() {
        if(y-2-size > -1) {
            do erase();
            let y = y-2;
            do draw();
            do Sys.wait(3);
        }
        return;
    }
    method void moveDown() {
        if(y+2+size < 256) {
            do erase();
            let y = y+2;
            do draw();
            do Sys.wait(3);
        }
        return;
    }
    method void moveRight() {
        if(x+2+size < 512) {
            do erase();
            let x = x+2;
            do draw();
            do Sys.wait(3);
        }
        return;
    }
    method void moveLeft() {
        if(x-2-size > -1) {
            do erase();
            let x = x - 2;
            do draw();
            do Sys.wait(3);
        }
        return;
    }
    method void incAngle() {
        if (angle < 175) {
            let angle = angle + 6;
        }
        return;
    }
    method void decAngle() {
        if (angle > 5) {
            let angle = angle - 6;
        }
        return;
    }
    method void printInfo() {
        do Screen.clearScreen();
        do draw();
        do Output.moveCursor(0, 0);
        do Output.printString("angle: ");
        do Output.printInt(angle);
        do Output.println();
        
        do Output.printString("(vx, vy): ");
        do Output.printString("(");
        do Output.printInt(vx);
        do Output.printString(", ");
        do Output.printInt(vy);
        do Output.printString(")");
        do Output.println();

        do Output.printString("(ax, ay): ");
        do Output.printString("(");
        do Output.printInt(ax);
        do Output.printString(", ");
        do Output.printInt(ay);
        do Output.printString(")");
        do Sys.wait(500);
        return;
    }
    method void updateRate() { // update acceleration
        let ax = data.getdAX((Math.devide((180-angle), 6)));
        let ay = data.getdAY((Math.devide((180-angle), 6)));
        return;
    }
    method void updateSpeed() { // update velocity
        let vx = vx + ax;
        let vy = vy + ay;
        return;
    }
    method void move() {
        if(x + vx > -1) {
            if(x + vx < 512) {
                let x = x + vx;
            }
        }
        // if(x + vx < -1) { let x = 0; }
        // if(x + vx > 511) { let x = 511; }
        if(y + vy > -1) {
            if(y + vy < 256) {
                let y = y + vy;
            }
        }
        // if(y + vy < -1) { let y = 0; }
        // if(y + vy > 256) { let y = 255; }
        do updateSpeed();
        do updateRate();
        return;
    }
}