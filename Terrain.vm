function Terrain.Init 5
push argument 0
pop static 0
push static 0
push constant 5
add
call Array.new 1
pop static 1
push argument 1
push argument 2
call Ground.Init 2
pop temp 0
push constant 0
push static 1
add
push constant 500
neg
push constant 254
push constant 1
call Ground.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
pop local 0
label WHILE_EXP0
push local 0
push static 0
lt
not
if-goto WHILE_END0
push local 0
push constant 1
sub
push static 1
add
pop pointer 1
push that 0
pop static 2
push static 2
call Ground.get_end_x 1
pop local 2
push static 2
call Ground.get_end_y 1
pop local 3
push static 2
call Ground.get_dir 1
pop local 4
push local 0
push static 1
add
push local 2
push local 3
push local 4
call Ground.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push static 0
lt
not
if-goto WHILE_END1
push local 0
push static 1
add
pop pointer 1
push that 0
pop static 2
push static 2
call Ground.get_str_x 1
push constant 0
gt
push static 2
call Ground.get_end_x 1
push constant 511
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 2
push constant 1
call Ground.DrawOrClear 2
pop temp 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 1
call Screen.setColor 1
pop temp 0
push constant 0
push constant 0
push constant 10
push constant 255
call Screen.drawRectangle 4
pop temp 0
push constant 501
push constant 0
push constant 511
push constant 255
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Terrain.Shifting 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push static 0
lt
not
if-goto WHILE_END0
push local 0
push static 1
add
pop pointer 1
push that 0
pop static 2
push static 2
call Ground.get_str_x 1
push constant 0
gt
push static 2
call Ground.get_end_x 1
push constant 511
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 2
push constant 0
call Ground.DrawOrClear 2
pop temp 0
label IF_FALSE0
push static 2
push argument 0
call Ground.upd_xs 2
pop temp 0
push static 2
call Ground.get_str_x 1
push constant 0
gt
push static 2
call Ground.get_end_x 1
push constant 511
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 2
push constant 1
call Ground.DrawOrClear 2
pop temp 0
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 1
call Screen.setColor 1
pop temp 0
push constant 0
push constant 0
push constant 10
push constant 255
call Screen.drawRectangle 4
pop temp 0
push constant 501
push constant 0
push constant 511
push constant 255
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Terrain.checkCollision 9
push constant 0
pop local 1
push constant 0
pop local 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push static 0
lt
not
if-goto WHILE_END0
push local 0
push static 1
add
pop pointer 1
push that 0
pop static 2
push static 2
call Ground.get_end_x 1
push static 2
call Ground.get_str_x 1
sub
pop local 3
push static 2
call Ground.get_end_y 1
push static 2
call Ground.get_str_y 1
sub
pop local 4
push argument 0
push static 2
call Ground.get_str_x 1
sub
pop local 5
push argument 1
push static 2
call Ground.get_str_y 1
sub
pop local 6
push argument 2
neg
push local 5
lt
push local 5
push local 3
push argument 2
add
lt
and
push argument 2
neg
push local 6
lt
push local 6
push local 4
push argument 2
add
lt
and
push argument 2
push local 6
gt
push local 6
push local 4
push argument 2
sub
gt
and
or
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push local 6
call Math.multiply 2
push local 4
push local 5
call Math.multiply 2
sub
pop local 7
push local 3
push local 3
call Math.multiply 2
push local 4
push local 4
call Math.multiply 2
add
pop local 8
push local 7
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 7
neg
pop local 7
label IF_FALSE1
push static 2
call Ground.get_type 1
push constant 1
eq
push local 7
push local 7
call Math.multiply 2
push local 8
push argument 2
call Math.multiply 2
push argument 2
call Math.multiply 2
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
neg
return
label IF_FALSE2
push static 2
call Ground.get_type 1
push constant 0
eq
push local 7
push local 7
call Math.multiply 2
push local 8
push argument 2
call Math.multiply 2
push argument 2
call Math.multiply 2
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
return
label IF_FALSE3
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
